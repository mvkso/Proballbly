[{"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\index.js":"1","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Header.js":"2","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Navigation.js":"3","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BplStandings.js":"4","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\LaLigaStandings.js":"5","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BundesligaStandings.js":"6","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Ligue1Standings.js":"7","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\MainPage.jsx":"8","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Standings.jsx":"9","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Select.jsx":"10","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\App.jsx":"11","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\scripts\\authentication.js":"12","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Signup.jsx":"13","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Signin.jsx":"14"},{"size":193,"mtime":1620923971893,"results":"15","hashOfConfig":"16"},{"size":1329,"mtime":1622334254799,"results":"17","hashOfConfig":"16"},{"size":732,"mtime":1622334901760,"results":"18","hashOfConfig":"16"},{"size":1983,"mtime":1622139741076,"results":"19","hashOfConfig":"16"},{"size":2011,"mtime":1622139756764,"results":"20","hashOfConfig":"16"},{"size":2022,"mtime":1622139746711,"results":"21","hashOfConfig":"16"},{"size":2011,"mtime":1622139761645,"results":"22","hashOfConfig":"16"},{"size":1476,"mtime":1622139765692,"results":"23","hashOfConfig":"16"},{"size":2192,"mtime":1622139778469,"results":"24","hashOfConfig":"16"},{"size":2954,"mtime":1622139772494,"results":"25","hashOfConfig":"16"},{"size":2203,"mtime":1622333257277,"results":"26","hashOfConfig":"16"},{"size":1089,"mtime":1622140605429,"results":"27","hashOfConfig":"16"},{"size":4791,"mtime":1622329965267,"results":"28","hashOfConfig":"16"},{"size":0,"mtime":1622332287491,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hvrxlu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\index.js",[],["70","71"],"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Header.js",["72"],"import React from \"react\";\r\nimport \"./css/Header.css\"\r\nimport logo from '../logo_black.png';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport authentication from \"../scripts/authentication\";\r\n\r\nconst Header = ({loggedUser, setLoggedUser}) => {\r\n     \r\n      const history = useHistory();\r\n    \r\n\r\n      const goToUserProfilePage = () => {\r\n            history.push('/');\r\n        }\r\n    \r\n\r\n      return(\r\n     <header className=\"header\">Proballbly\r\n           { !loggedUser &&\r\n               <div className=\"links-account\">\r\n                   <Link to=\"login\" className=\"linktext\">Join us today!</Link>\r\n               </div>\r\n            }\r\n            { loggedUser &&\r\n            <div className=\"loggedPanel\">\r\n                <div className=\"text-panel\">Hi, {loggedUser.username.toUpperCase()}!</div>\r\n                    <img src=\"/account.png\" alt=\"account icon\" onClick={goToUserProfilePage}/>\r\n                <div className=\"logout-panel\">\r\n                    <Link className=\"logout-link\" to=\"/\"\r\n                           onClick={ () => {\r\n                               authentication.logout();\r\n                               setLoggedUser(null);\r\n                           }}>Logout</Link>\r\n                </div>\r\n            </div> }\r\n      </header>\r\n      );\r\n\r\n}\r\nexport default Header;\r\n  \r\n","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Navigation.js",[],"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BplStandings.js",["73"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass BplStandings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2021/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\">BPL STANDINGS</h1>\r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n             <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default BplStandings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\LaLigaStandings.js",["74"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass LaLigaStandings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2014/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\">La Liga Standings</h1>\r\n              \r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n              <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default LaLigaStandings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BundesligaStandings.js",["75"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass BundesligaStandings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2002/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\">Bundesliga STANDINGS</h1>\r\n              \r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n              <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default BundesligaStandings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Ligue1Standings.js",["76"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass Ligue1Standings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2015/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\">Ligue 1 Standings</h1>\r\n              \r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n              <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default Ligue1Standings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\MainPage.jsx",["77","78","79","80","81"],"import React, {useState, useEffect} from \"react\";\r\nimport { Route, Switch, NavLink, useHistory, Link} from \"react-router-dom\";\r\nimport Standings from \"./Standings\";\r\nimport \"./css/MainPage.css\"\r\n\r\nconst MainPage = () => {\r\n\r\n    const history = useHistory();\r\n    function handleClick(id){\r\n        history.push(\"/:id\",{params: id})\r\n    }\r\n    const [competitions, setCompetitions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/competitions\")\r\n        .then((res) => res.json())\r\n        .then((data)=>setCompetitions(data))\r\n    },[]);\r\n    \r\n\r\n    return(\r\n        <div className=\"body\">\r\n            <header className=\"main-header\">\r\n                <h1>WELCOME TO PROBALLBLY</h1>\r\n                <h2>CHOOSE YOUR LEAGUE</h2>\r\n            </header>\r\n        <section className = \"main-page-grid\">\r\n            {competitions.map((competition)=> \r\n            <NavLink to={'/standings/'+competition.id}>\r\n                <div className=\"competition-item\" key={competition.id}>\r\n                    <div class=\"competition-box\">\r\n                        <div className=\"diamond\">\r\n                            <span>{competition.name}</span>\r\n                            <div className=\"competition-tip\">{competition.area.name}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </NavLink>\r\n\r\n            )}\r\n\r\n        </section>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\nexport default MainPage;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Standings.jsx",["82","83","84"],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Select from \"./Select\";\r\nimport \"./css/Standings.css\";\r\n\r\n\r\nconst Standings = () => {\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    const [data, setData] = useState([]);\r\n\r\n    function handleClick(){\r\n        history.push('/allteams');\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/competitions/${id}/standings`)\r\n        .then((res) => res.json())\r\n        .then((data)=>setData(data))\r\n        \r\n    },[]);\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"ptable\">\r\n                {data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <div className=\"standing-div\"> \r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" onClick={() => handleClick()} >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                </div>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n            \r\n            <Select data={data}/>\r\n            </div>\r\n    );\r\n\r\n\r\n};\r\nexport default Standings;\r\n","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Select.jsx",["85","86","87"],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./css/Select.css\"\r\n\r\n\r\nconst Select = (data) => {\r\n\r\n    let competitions = data.data[0];\r\n    const [team1, setTeam1] = useState(1);\r\n    const [team2, setTeam2] = useState(1);\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    useEffect(() => console.log(competitions));\r\n\r\n    function algorithm(team1x, team2y){\r\n        let team1points =  parseInt(competitions.table[team1x-1].points);\r\n        let team1position = parseInt(competitions.table[team1x-1].position);\r\n        let team2points =  parseInt(competitions.table[team2y-1].points);\r\n        let team2position = parseInt(competitions.table[team2y-1].position);\r\n        let team1result = team1points/team1position;\r\n        let team2result = team2points/team2position;\r\n        let allpoints = team1result+team2result;\r\n        if(team1result>team2result){\r\n            setResult(competitions.table[team1x-1].team.name+\" is going to win in \"+ team1result/allpoints*100+ \"%\")\r\n        }else if(team1result<team2result){\r\n            setResult(competitions.table[team2y-1].team.name+\" is going to win in \"+ team2result/allpoints*100+ \"%\")\r\n        }else{\r\n            setResult(\"There will be draw no cap\");\r\n        }\r\n             \r\n    }\r\n\r\n    function handlechange1(e){\r\n        setTeam1(e.target.value);\r\n        algorithm(team1,team2);\r\n\r\n    }\r\n\r\n    function handlechange2(e){\r\n        setTeam2(e.target.value);\r\n        algorithm(team1,team2);\r\n\r\n    }\r\n\r\n    return(\r\n    <div className=\"selectors\">\r\n        <header>Calculate probability</header>\r\n        \r\n            <div className=\"selects\">\r\n            {data.data.map((standings) => {\r\n                return standings.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"1\" value={team1} onChange={handlechange1}>\r\n                    {standings.table.map((e) => {\r\n                        return(\r\n                            <option key={e.position} value={e.position}>{e.position}. {e.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n        \r\n        {data.data.map((standings2) => {\r\n                return standings2.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"2\" value={team2} onChange={handlechange2}>\r\n                    {standings2.table.map((e2) => {\r\n                        return(\r\n                            <option key={e2.position} value={e2.position}>{e2.position}. {e2.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n            </div>\r\n           \r\n            \r\n           \r\n            <div className=\"algorithm\">{result} \"</div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Select;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\App.jsx",["88","89","90"],"import { render } from '@testing-library/react';\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport MainPage from \"./components/MainPage\";\r\nimport Header from \"./components/Header\"\r\nimport Nav from \"./components/Navigation\"\r\nimport BplStandings from \"./components/BplStandings\"\r\nimport \"./App.css\"\r\nimport LaLigaStandings from './components/LaLigaStandings';\r\nimport BundesligaStandings from './components/BundesligaStandings';\r\nimport Ligue1Standings from './components/Ligue1Standings';\r\nimport Standings from \"./components/Standings\";\r\nimport Signup from \"./components/Signup\";\r\nimport Signin from \"./components/Signin\";\r\nimport Authentication from \"./scripts/authentication\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction App(){  \r\n\r\n  const [loggedUser, setLoggedUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n      setLoggedUser(Authentication.getCurrentUser());\r\n  }, []);\r\n\r\n    return (\r\n      <BrowserRouter>\r\n          <div className=\"App\">     \r\n          <Header loggedUser={loggedUser} setLoggedUser={setLoggedUser}/>\r\n            <Nav loggedUser={loggedUser}/>  \r\n          <div className=\"base-container\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n                <MainPage loggedUser={loggedUser}/>\r\n            </Route>\r\n            <Route exact path=\"/bpl\">\r\n              <BplStandings loggedUser={loggedUser}/>\r\n            </Route>\r\n            <Route exact path=\"/laliga\">\r\n              <LaLigaStandings loggedUser={loggedUser}/>\r\n            </Route>\r\n            <Route exact path=\"/bundesliga\">\r\n              <BundesligaStandings loggedUser={loggedUser}/>\r\n            </Route>\r\n            <Route exact path=\"/ligue1\">\r\n              <Ligue1Standings loggedUser={loggedUser}/>\r\n            </Route>\r\n            <Route exact path='/standings/:id' component={Standings} loggedUser={loggedUser}/>\r\n            <Route exact path='/login'\r\n            render={(props) => <Signup {...props} setLoggedUser={setLoggedUser}/>}\r\n            >\r\n            </Route>\r\n              \r\n          </Switch>\r\n          </div>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\scripts\\authentication.js",["91"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst authenticationHeader = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { Authorization: 'Bearer ' + user.accessToken }; \r\n    } else {\r\n      return {};\r\n    }\r\n}\r\n\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  console.log(\"usuwam token\")\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n  authenticationHeader,\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Signup.jsx",["92","93","94","95","96","97"],"import React, {useState, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Authentication from \"../scripts/authentication\";\r\nimport \"./css/Signup.css\"\r\n\r\nconst Signup = (props) => {\r\n    const togglePanel = () => {\r\n        history.push(\"/\");\r\n      };\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [register_usernamme,setRegisterUsername] = useState(\"\");\r\n    const [register_password,setRegisterPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [registerToggle, setRegisterToggle] = useState(false);\r\n    const [loginToggle, setLoginToggle] = useState(true);\r\n\r\n\r\n      const onClickButton = () => {\r\n        setLoginToggle(!loginToggle);\r\n        setRegisterToggle(!registerToggle);\r\n        \r\n      }\r\n    \r\n      const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n      };\r\n    \r\n      const onChangeRegisterUsername = (e) => {\r\n        const register_username = e.target.value;\r\n        setRegisterUsername(register_username);\r\n      };\r\n\r\n      const onChangeRegisterPassword = (e) => {\r\n        const register_password = e.target.value;\r\n        setRegisterPassword(register_password);\r\n      };\r\n\r\n\r\n      const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n      };\r\n    \r\n      const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n      };\r\n    \r\n      const handleRegister = (e) => {\r\n        e.preventDefault();\r\n    \r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        \r\n      Authentication.register(register_usernamme, email, register_password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n          alert(\"Udana rejestracja. Przeniesienie na stronę logowania\");\r\n          history.push(\"/login\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n            alert(\"Błąd z rejestracją. Powrót na stronę glówną\");\r\n            history.push('/');\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n      e.preventDefault();\r\n        Authentication.login(username, password).then(\r\n          () => {\r\n            props.setLoggedUser(Authentication.getCurrentUser());\r\n            alert(\"Udane logowanie. Przeniesienie na stronę głowna\");\r\n            history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          (error) => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n              alert(\"Błąd logowania\");\r\n              setMessage(resMessage);\r\n              setSuccessful(false);\r\n          }\r\n        );\r\n    };\r\n\r\n      return(\r\n            <section className=\"signup-section\">\r\n                <div class=\"login-page\">\r\n  <div class=\"form-login\">\r\n    {registerToggle ? <form class=\"register-form\" onSubmit={handleRegister} >\r\n      <input id='username' type=\"username\" name=\"username\" placeholder=\"username\" onChange={onChangeRegisterUsername} value={register_usernamme}/>\r\n      <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={onChangeRegisterPassword} value={register_password}/>\r\n      <input id=\"email\" type=\"email\" placeholder=\"email address\" onChange={onChangeEmail} value={email}/>\r\n      <button type='submit'>create</button>\r\n      <p class=\"message\" >Already registered? <a onClick={onClickButton}>Sign In</a></p>\r\n    </form> :null}\r\n    {loginToggle?\r\n    <form class=\"login-form\" onSubmit={handleLogin}>\r\n      <input id='username' type=\"username\" name=\"username\" placeholder=\"username\" onChange={onChangeUsername} value={username}/>\r\n      <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={onChangePassword} value={password}/>\r\n      <button type='submit'>login</button>\r\n      <p class=\"message\" >Not registered? <a onClick={onClickButton}>Create an account</a></p>\r\n    </form>:null}\r\n  </div>\r\n</div>\r\n               \r\n            </section>\r\n      );\r\n    \r\n};\r\nexport default Signup;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Signin.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":42,"column":33,"nodeType":"108","endLine":42,"endColumn":81},{"ruleId":"106","severity":1,"message":"107","line":43,"column":33,"nodeType":"108","endLine":43,"endColumn":81},{"ruleId":"106","severity":1,"message":"107","line":43,"column":33,"nodeType":"108","endLine":43,"endColumn":81},{"ruleId":"106","severity":1,"message":"107","line":43,"column":33,"nodeType":"108","endLine":43,"endColumn":81},{"ruleId":"102","severity":1,"message":"109","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":15},{"ruleId":"102","severity":1,"message":"110","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":23},{"ruleId":"102","severity":1,"message":"111","line":2,"column":46,"nodeType":"104","messageId":"105","endLine":2,"endColumn":50},{"ruleId":"102","severity":1,"message":"112","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"113","line":9,"column":14,"nodeType":"104","messageId":"105","endLine":9,"endColumn":25},{"ruleId":"102","severity":1,"message":"114","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":22,"column":7,"nodeType":"117","endLine":22,"endColumn":9,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"107","line":47,"column":33,"nodeType":"108","endLine":47,"endColumn":81},{"ruleId":"102","severity":1,"message":"119","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"120","line":2,"column":22,"nodeType":"104","messageId":"105","endLine":2,"endColumn":31},{"ruleId":"102","severity":1,"message":"114","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"121","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":16},{"ruleId":"102","severity":1,"message":"122","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"123","line":14,"column":8,"nodeType":"104","messageId":"105","endLine":14,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":47,"column":1,"nodeType":"126","endLine":53,"endColumn":3},{"ruleId":"102","severity":1,"message":"127","line":7,"column":11,"nodeType":"104","messageId":"105","endLine":7,"endColumn":22},{"ruleId":"102","severity":1,"message":"128","line":12,"column":11,"nodeType":"104","messageId":"105","endLine":12,"endColumn":19},{"ruleId":"102","severity":1,"message":"129","line":19,"column":12,"nodeType":"104","messageId":"105","endLine":19,"endColumn":22},{"ruleId":"102","severity":1,"message":"130","line":20,"column":12,"nodeType":"104","messageId":"105","endLine":20,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":119,"column":47,"nodeType":"108","endLine":119,"endColumn":74},{"ruleId":"131","severity":1,"message":"132","line":126,"column":43,"nodeType":"108","endLine":126,"endColumn":70},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Standings' is defined but never used.","'handleClick' is defined but never used.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'useHistory' is defined but never used.","'useParams' is defined but never used.","'render' is defined but never used.","'Component' is defined but never used.","'Signin' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'togglePanel' is assigned a value but never used.","'checkBtn' is assigned a value but never used.","'successful' is assigned a value but never used.","'message' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [id]",{"range":"138","text":"139"},[612,614],"[id]"]