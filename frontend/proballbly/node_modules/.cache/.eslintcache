[{"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\index.js":"1","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Header.js":"2","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Navigation.js":"3","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BplStandings.js":"4","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\LaLigaStandings.js":"5","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BundesligaStandings.js":"6","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Ligue1Standings.js":"7","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\MainPage.jsx":"8","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Standings.jsx":"9","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Select.jsx":"10","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\App.jsx":"11","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\scripts\\authentication.js":"12","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Signup.jsx":"13","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\AllTeams.jsx":"14","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\addTeam.jsx":"15","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\AdminPanel.jsx":"16","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Pagination.jsx":"17","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Footer.jsx":"18"},{"size":193,"mtime":1620923971893,"results":"19","hashOfConfig":"20"},{"size":2755,"mtime":1623847344951,"results":"21","hashOfConfig":"20"},{"size":1046,"mtime":1623847357468,"results":"22","hashOfConfig":"20"},{"size":2065,"mtime":1623173266139,"results":"23","hashOfConfig":"20"},{"size":2077,"mtime":1623173128181,"results":"24","hashOfConfig":"20"},{"size":2105,"mtime":1623173261746,"results":"25","hashOfConfig":"20"},{"size":2107,"mtime":1623173066444,"results":"26","hashOfConfig":"20"},{"size":3794,"mtime":1623789309344,"results":"27","hashOfConfig":"20"},{"size":2326,"mtime":1623173345573,"results":"28","hashOfConfig":"20"},{"size":3241,"mtime":1623689434634,"results":"29","hashOfConfig":"20"},{"size":2705,"mtime":1623845675839,"results":"30","hashOfConfig":"20"},{"size":1089,"mtime":1622566573526,"results":"31","hashOfConfig":"20"},{"size":4791,"mtime":1622566573522,"results":"32","hashOfConfig":"20"},{"size":3212,"mtime":1623785766259,"results":"33","hashOfConfig":"20"},{"size":4176,"mtime":1622771983919,"results":"34","hashOfConfig":"20"},{"size":3723,"mtime":1623785278295,"results":"35","hashOfConfig":"20"},{"size":658,"mtime":1623789494414,"results":"36","hashOfConfig":"20"},{"size":349,"mtime":1623845469394,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1hvrxlu",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\index.js",[],["89","90"],"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Header.js",["91","92"],"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Navigation.js",["93","94"],"import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./css/Navigation.css\"\r\nimport Hamburger from 'hamburger-react'\r\n\r\nconst Nav = ({loggedUser}) => {\r\n\r\n  const [isOpen, setOpen] = useState(true)\r\n    \r\n  return (\r\n      <nav className= {isOpen ? \"navbar\" : \"navbar-close\"}>\r\n              { loggedUser && <div className= { isOpen ? \"links\" : \"link-close\"}>\r\n              <Link to=\"/\" >Strona główna</Link>   \r\n              <Link to=\"/bpl\">Premier League</Link>\r\n              <Link to=\"laliga\">La Liga</Link>\r\n              <Link to=\"bundesliga\">Bundesliga</Link>\r\n              <Link to=\"ligue1\">Ligue 1</Link>\r\n              <Link to=\"allteams\" >All teams</Link>\r\n               {loggedUser && loggedUser.roles[0] === \"ROLE_ADMIN\" && <Link to=\"adminpanel\">Admin panel</Link>}\r\n              </div>\r\n            }\r\n              {!loggedUser && <div className=\"links\">\r\n              <Link to=\"login\">Log in</Link>\r\n                  </div>}\r\n          \r\n      </nav>\r\n  )\r\n\r\n}\r\n\r\nexport default Nav;\r\n\r\n","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BplStandings.js",["95"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass BplStandings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2021/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\"><a href=\"#calculate\">BPL Standings</a></h1>\r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n            <div className=\"href\" id=\"calculate\"></div>\r\n             <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default BplStandings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\LaLigaStandings.js",["96"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass LaLigaStandings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2014/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\"><a href=\"#calculate\"> La Liga Standings</a></h1>\r\n              \r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n            <div id=\"calculate\"></div>\r\n              <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default LaLigaStandings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\BundesligaStandings.js",["97"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass BundesligaStandings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2002/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\"><a href=\"#calculate\"> Bundesliga Standings</a></h1>\r\n              \r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n            <div className=\"href\" id=\"calculate\"></div>\r\n              <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default BundesligaStandings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Ligue1Standings.js",["98"],"import React, {Component} from 'react';\r\nimport \"./css/Standings.css\"\r\nimport Select from \"./Select\";\r\nclass Ligue1Standings extends Component{\r\n\r\n    state = \r\n  {\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:8080/competitions/2015/standings')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({data})\r\n    }\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"ptable\">\r\n              <h1 className=\"headin\"><a href=\"#calculate\">Ligue 1 Standings</a></h1>\r\n              \r\n                {this.state.data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n            \r\n            <div className=\"href\" id=\"calculate\"></div>\r\n              <Select data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default Ligue1Standings;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\MainPage.jsx",["99","100","101","102","103","104"],"import React, {useState, useEffect} from \"react\";\r\nimport { Route, Switch, NavLink, useHistory, Link} from \"react-router-dom\";\r\nimport Standings from \"./Standings\";\r\nimport \"./css/MainPage.css\";\r\nimport Pagination from \"./Pagination\";\r\n\r\n\r\nconst MainPage = ({loggedUser}) => {\r\n\r\n    const history = useHistory();\r\n    function handleClick(id){\r\n        history.push(\"/:id\",{params: id})\r\n    }\r\n    const [competitions, setCompetitions] = useState([]);\r\n    const [search, setSearch] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [competitionsPerPage] = useState(20);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/competitions\")\r\n        .then((res) => res.json())\r\n        .then((data)=>setCompetitions(data))\r\n    },[]);\r\n\r\n    const searchSpace=(event)=>{\r\n        let keyword = event.target.value;\r\n        setSearch(keyword)\r\n      }\r\n\r\n      //Get current competitions\r\n    const indexOfLastCompetition = currentPage * competitionsPerPage;\r\n    const indexOdFirstCompetition = indexOfLastCompetition - competitionsPerPage;\r\n    const currentCompetitions = competitions.slice(indexOdFirstCompetition,indexOfLastCompetition);\r\n\r\n    // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    \r\n    const competitionItems = currentCompetitions.filter((competition) => {\r\n        if(search == null)\r\n            return competition\r\n            else if(competition.name.toString().toLowerCase().includes(search.toString().toLowerCase() \r\n            || competition.area.name.toString().toLowerCase().includes(search.toString().toLowerCase())))\r\n            {\r\n                console.log(competition)\r\n                return competition\r\n            }\r\n        \r\n    }).map((competition)=> \r\n    <NavLink to={'/standings/'+competition.id}>\r\n        <div className=\"competition-item\" key={competition.id}>\r\n            <div className=\"competition-box\">\r\n                <div className=\"diamond\">\r\n                    <span>{competition.name}</span>\r\n                    <div className=\"competition-tip\">{competition.area.name}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </NavLink>\r\n\r\n    )\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        <div className=\"body\">\r\n            {loggedUser &&\r\n            <header className=\"main-header\">\r\n                \r\n                <h1>WELCOME TO PROBALLBLY</h1>\r\n                <h2>CHOOSE YOUR LEAGUE</h2>\r\n                <Pagination competitionsPerPage={competitionsPerPage} totalCompetitions={competitions.length} paginate={paginate}/>\r\n                <input type=\"text\" placeholder=\"Find your league\" onChange={(e)=>searchSpace(e)}></input>\r\n                \r\n            </header>\r\n}         \r\n{\r\n            !loggedUser &&\r\n            <header className=\"main-header\">\r\n                <h1>SIGN UP TO SEE OUR CONTENT</h1>\r\n                <h2>Cheers</h2>\r\n            </header>\r\n        }\r\n        { loggedUser &&\r\n        \r\n        <section className = \"main-page-grid\">\r\n            \r\n            {/* {competitions.map((competition)=> \r\n            <NavLink to={'/standings/'+competition.id}>\r\n                <div className=\"competition-item\" key={competition.id}>\r\n                    <div className=\"competition-box\">\r\n                        <div className=\"diamond\">\r\n                            <span>{competition.name}</span>\r\n                            <div className=\"competition-tip\">{competition.area.name}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </NavLink>\r\n\r\n            )} */}\r\n            {competitionItems}\r\n            \r\n      \r\n        </section>\r\n        \r\n}\r\n        \r\n        \r\n        </div>\r\n            \r\n\r\n    );\r\n\r\n};\r\nexport default MainPage;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Standings.jsx",["105","106","107"],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Select from \"./Select\";\r\nimport \"./css/Standings.css\";\r\n\r\n\r\nconst Standings = () => {\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    const [data, setData] = useState([]);\r\n\r\n    function handleClick(){\r\n        history.push('/allteams');\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/competitions/${id}/standings`)\r\n        .then((res) => res.json())\r\n        .then((data)=>setData(data))\r\n        \r\n    },[]);\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"ptable\">\r\n            <h1 className=\"headin\"><a href=\"#calculate\">Standings</a></h1>\r\n                {data.map((standing) =>{\r\n                  return standing.type === \"TOTAL\"?\r\n                  <div className=\"standing-div\"> \r\n                  <table>\r\n                  <tr className=\"col\">\r\n                      <th>#</th>\r\n                      <th>Team</th>\r\n                      <th>GP</th>\r\n                      <th>W</th>\r\n                      <th>D</th>\r\n                      <th>L</th>\r\n                      <th>GD</th>\r\n                      <th>PTS</th>\r\n                  </tr>\r\n                   {standing.table.map((e) =>{\r\n                          return(\r\n                            <tr className=\"wpos\" onClick={() => handleClick()} >\r\n                            <td>{e.position}</td>\r\n                            <td><img className=\"teamLogo\" src={e.team.crestUrl}></img>  {e.team.name}</td>\r\n                            <td>{e.playedGames}</td>\r\n                            <td>{e.won}</td>\r\n                            <td>{e.draw}</td>\r\n                            <td>{e.lost}</td>\r\n                            <td>{e.goalDifference}</td>\r\n                            <td>{e.points}</td>\r\n                            </tr>\r\n                            \r\n                          );\r\n                      })} \r\n                </table>\r\n                </div>\r\n                    :null;\r\n        \r\n                \r\n                \r\n\r\n            })}\r\n            \r\n            <div className=\"href\" id=\"calculate\"></div>\r\n            <Select data={data} />\r\n            </div>\r\n    );\r\n\r\n\r\n};\r\nexport default Standings;\r\n","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Select.jsx",["108","109","110"],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./css/Select.css\"\r\n\r\n\r\nconst Select = (data) => {\r\n\r\n    let competitions = data.data[0];\r\n    const [team1, setTeam1] = useState(1);\r\n    const [team2, setTeam2] = useState(1);\r\n    const [result, setResult] = useState(\"Choose teams and then press calculate button\");\r\n\r\n    useEffect(() => console.log(competitions));\r\n\r\n    function algorithm(){\r\n        let team1points =  parseInt(competitions.table[team1-1].points);\r\n        let team1position = parseInt(competitions.table[team1-1].position);\r\n        let team2points =  parseInt(competitions.table[team2-1].points);\r\n        let team2position = parseInt(competitions.table[team2-1].position);\r\n        let team1result = team1points/team1position;\r\n        let team2result = team2points/team2position;\r\n        let allpoints = team1result+team2result;\r\n        if(team1result>team2result){\r\n            setResult(competitions.table[team1-1].team.name+\" is going to win in \"+ team1result/allpoints*100+ \"%\");\r\n        }else if(team1result<team2result){\r\n            setResult(competitions.table[team2-1].team.name+\" is going to win in \"+ team2result/allpoints*100+ \"%\");\r\n        }else{\r\n            setResult(\"There will be draw no cap\");\r\n        }\r\n        \r\n             \r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        algorithm();\r\n\r\n    }\r\n\r\n    function handlechange1(e){\r\n        setTeam1(e.target.value);\r\n        setResult(\"press calculate button\");\r\n    }\r\n\r\n    function handlechange2(event){\r\n        setTeam2(event.target.value);\r\n        \r\n        setResult(\"press calculate button\");\r\n    }\r\n\r\n    return(\r\n    <div className=\"selectors\">\r\n        <header>Calculate probability</header>\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"selects\">\r\n            {data.data.map((standings) => {\r\n                return standings.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"1\" value={team1} onChange={handlechange1}>\r\n                    {standings.table.map((e) => {\r\n                        return(\r\n                            <option key={e.position} value={e.position}>{e.position}. {e.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n        \r\n        {data.data.map((standings2) => {\r\n                return standings2.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"2\" value={team2} onChange={handlechange2}>\r\n                    {standings2.table.map((e2) => {\r\n                        return(\r\n                            <option key={e2.position} value={e2.position}>{e2.position}. {e2.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n            \r\n            </div>\r\n           \r\n            <input className=\"submitInput\" type=\"submit\" value=\"Calculate\"  />\r\n            </form>\r\n            <div className=\"algorithm\">{result}</div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Select;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\App.jsx",["111","112"],"D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\scripts\\authentication.js",["113"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst authenticationHeader = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { Authorization: 'Bearer ' + user.accessToken }; \r\n    } else {\r\n      return {};\r\n    }\r\n}\r\n\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  console.log(\"usuwam token\")\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n  authenticationHeader,\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Signup.jsx",["114","115","116","117","118","119"],"import React, {useState, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Authentication from \"../scripts/authentication\";\r\nimport \"./css/Signup.css\"\r\n\r\nconst Signup = (props) => {\r\n    const togglePanel = () => {\r\n        history.push(\"/\");\r\n      };\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [register_usernamme,setRegisterUsername] = useState(\"\");\r\n    const [register_password,setRegisterPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [registerToggle, setRegisterToggle] = useState(false);\r\n    const [loginToggle, setLoginToggle] = useState(true);\r\n\r\n\r\n      const onClickButton = () => {\r\n        setLoginToggle(!loginToggle);\r\n        setRegisterToggle(!registerToggle);\r\n        \r\n      }\r\n    \r\n      const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n      };\r\n    \r\n      const onChangeRegisterUsername = (e) => {\r\n        const register_username = e.target.value;\r\n        setRegisterUsername(register_username);\r\n      };\r\n\r\n      const onChangeRegisterPassword = (e) => {\r\n        const register_password = e.target.value;\r\n        setRegisterPassword(register_password);\r\n      };\r\n\r\n\r\n      const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n      };\r\n    \r\n      const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n      };\r\n    \r\n      const handleRegister = (e) => {\r\n        e.preventDefault();\r\n    \r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        \r\n      Authentication.register(register_usernamme, email, register_password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n          alert(\"Udana rejestracja. Przeniesienie na stronę logowania\");\r\n          history.push(\"/login\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n            alert(\"Błąd z rejestracją. Powrót na stronę glówną\");\r\n            history.push('/');\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n      e.preventDefault();\r\n        Authentication.login(username, password).then(\r\n          () => {\r\n            props.setLoggedUser(Authentication.getCurrentUser());\r\n            alert(\"Udane logowanie. Przeniesienie na stronę głowna\");\r\n            history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          (error) => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n              alert(\"Błąd logowania\");\r\n              setMessage(resMessage);\r\n              setSuccessful(false);\r\n          }\r\n        );\r\n    };\r\n\r\n      return(\r\n            <section className=\"signup-section\">\r\n                <div class=\"login-page\">\r\n  <div class=\"form-login\">\r\n    {registerToggle ? <form class=\"register-form\" onSubmit={handleRegister} >\r\n      <input id='username' type=\"username\" name=\"username\" placeholder=\"username\" onChange={onChangeRegisterUsername} value={register_usernamme}/>\r\n      <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={onChangeRegisterPassword} value={register_password}/>\r\n      <input id=\"email\" type=\"email\" placeholder=\"email address\" onChange={onChangeEmail} value={email}/>\r\n      <button type='submit'>create</button>\r\n      <p class=\"message\" >Already registered? <a onClick={onClickButton}>Sign In</a></p>\r\n    </form> :null}\r\n    {loginToggle?\r\n    <form class=\"login-form\" onSubmit={handleLogin}>\r\n      <input id='username' type=\"username\" name=\"username\" placeholder=\"username\" onChange={onChangeUsername} value={username}/>\r\n      <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={onChangePassword} value={password}/>\r\n      <button type='submit'>login</button>\r\n      <p class=\"message\" >Not registered? <a onClick={onClickButton}>Create an account</a></p>\r\n    </form>:null}\r\n  </div>\r\n</div>\r\n               \r\n            </section>\r\n      );\r\n    \r\n};\r\nexport default Signup;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\AllTeams.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import \"./css/AllTeams.scss\"\r\nimport React, {useState, useRef, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst AllTeams = () => {\r\n    const history = useHistory();\r\n    const API_URL = \"http://localhost:8080/api/teams/\";\r\n    const [toggle, setToggle] = useState(true);\r\n    const [teams, setTeams] = useState([]);\r\n    const [name,setName] = useState(\"\");\r\n    const [shortName, setShortName] = useState(\"\");\r\n    const [website, setWebsite] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [logo, setLogo] = useState(\"\");\r\n    const [arena, setArena] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [search, setSearch] = useState(null);\r\n   \r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/api/teams/`)\r\n        .then((res) => res.json())\r\n        .then((teams)=>setTeams(teams))\r\n        \r\n    },[]);\r\n\r\n    const toggleTeams = () => {\r\n        setToggle(!toggle)\r\n        //history.push(\"/allteams\");\r\n      };\r\n\r\n      const searchSpace=(event)=>{\r\n        let keyword = event.target.value;\r\n        setSearch(keyword)\r\n      }\r\n    \r\n      const teamsItem = teams.filter((teams) => {\r\n        if(search == null)\r\n            return teams\r\n            else if(teams.name.toString().toLowerCase().includes(search.toString().toLowerCase() \r\n            || teams.city.toString().toLowerCase().includes(search.toString().toLowerCase())))\r\n            {\r\n               \r\n                return teams\r\n            }\r\n        \r\n    }).map((teams)=> \r\n    <div className=\"teamCard\" key={teams.id}>\r\n                  <input type=\"checkbox\" id={teams.id}/>\r\n                  \r\n                  <label for={teams.id}><img className=\"teamLogo\" src={teams.logo}/>{teams.name} from {teams.city}</label>\r\n                  <div className=\"content\" id={teams.id}>\r\n                    <div>{teams.description} <a href={teams.website}>{teams.website}</a></div>\r\n                  </div>\r\n                </div>\r\n\r\n    )\r\n\r\n    \r\n\r\n      return(\r\n          <section className=\"all-teams-section\">\r\n            \r\n            <div className=\"links\">\r\n              <Link to=\"/addform\">Add own team</Link>\r\n              </div>\r\n            <div className=\"inputdiv\">\r\n              <input type=\"text\" placeholder=\"Find your team\" onChange={(e)=>searchSpace(e)}></input>\r\n            </div>\r\n\r\n              {teamsItem}\r\n            {/* {teams.map((team) => {\r\n              return(\r\n                <div className=\"teamCard\" key={team.id}>\r\n                  <input type=\"checkbox\" id={team.id}/>\r\n                  \r\n                  <label for={team.id}><img className=\"teamLogo\" src={team.logo}/>{team.name} from {team.city}</label>\r\n                  <div className=\"content\" id={team.id}>\r\n                    <div>{team.description} <a href={team.website}>{team.website}</a></div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })} */}\r\n        </section>\r\n      );\r\n\r\n\r\n}\r\nexport default AllTeams;\r\n","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\addTeam.jsx",["145","146","147","148"],"import React, {useState, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./css/addTeam.css\"\r\n\r\n\r\n\r\nconst AddTeam = () => {\r\n    const history = useHistory();\r\n    const API_URL = \"http://localhost:8080/api/teams/\";\r\n\r\n    const [name,setName] = useState(\"\");\r\n    const [shortName, setShortName] = useState(\"\");\r\n    const [website, setWebsite] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [logo, setLogo] = useState(\"\");\r\n    const [arena, setArena] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    \r\n    const onClickButton = () => {\r\n        history.push(\"/allteams\");\r\n    }\r\n\r\n    const addTeams = (name,\r\n        shortName,\r\n        website,\r\n        description,\r\n        city,\r\n        logo,\r\n        arena) =>{\r\n        return axios.post(API_URL, {\r\n            name,\r\n            shortName,\r\n            website,\r\n            description,\r\n            city,\r\n            logo,\r\n            arena,\r\n        });\r\n    };\r\n\r\n    const handleAddTeam = () => {\r\n        addTeams(name,\r\n            shortName,\r\n            website,\r\n            description,\r\n            city,\r\n            logo,\r\n            arena).then(\r\n            (response) => {\r\n              setMessage(response.data.message);\r\n              setSuccessful(true);\r\n              alert(\"Success!\");\r\n              history.push(\"/allteams\");\r\n              window.location.reload();\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n                alert(\"Adding team error, let's go back to main page\");\r\n                history.push('/');\r\n              setMessage(resMessage);\r\n              setSuccessful(false);\r\n            }\r\n          );\r\n    };\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value;\r\n        setName(name);\r\n      };\r\n\r\n      const onChangeShortName = (e) => {\r\n        const shortName = e.target.value;\r\n        setShortName(shortName);\r\n      };\r\n\r\n      const onChangeWebsite = (e) => {\r\n        const website = e.target.value;\r\n        setWebsite(website);\r\n      };\r\n\r\n      const onChangeDescription = (e) => {\r\n        const description = e.target.value;\r\n        setDescription(description);\r\n      };\r\n\r\n      const onChangeCity = (e) => {\r\n        const city = e.target.value;\r\n        setCity(city);\r\n      };\r\n\r\n      const onChangeLogo= (e) => {\r\n        const logo = e.target.value;\r\n        setLogo(logo);\r\n      };\r\n\r\n      const onChangeArena = (e) => { \r\n        const arena = e.target.value;\r\n        setArena(arena);\r\n      };\r\n\r\n    return(\r\n        <section className=\"formSection\">\r\n            <div className=\"form-login\">\r\n                <form class=\"team-form\" onSubmit={handleAddTeam}>\r\n      <input id='name' type=\"name\" name=\"text\" placeholder=\"type name\" onChange={onChangeName} value={name}/>\r\n      <input id='shortName' type=\"text\" name=\"shortName\" placeholder=\"type short name\" onChange={onChangeShortName} value={shortName}/>\r\n      <input id='website' type=\"url\" name=\"website\" placeholder=\"type website url\" onChange={onChangeWebsite} value={website}/>\r\n      <input id='city' type=\"text\" name=\"city\" placeholder=\"type city\" onChange={onChangeCity} value={city}/>\r\n      <input id='logo' type=\"url\" name=\"logo\" placeholder=\"type logo url\" onChange={onChangeLogo} value={logo}/>\r\n      <input id='arena' type=\"text\" name=\"arena\" placeholder=\"type arena\" onChange={onChangeArena} value={arena}/>\r\n      <input id='description' type=\"text\" name=\"description\" placeholder=\"type description\" onChange={onChangeDescription} value={description}/>\r\n      <button type='submit'>Add team</button>\r\n      <p class=\"message\" >Not interested? <a onClick={onClickButton}>Check other teams</a></p>\r\n        </form>\r\n        </div>\r\n        </section>\r\n    );\r\n\r\n}\r\nexport default AddTeam;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\AdminPanel.jsx",["149","150","151","152","153"],"import React, {createContext, useContext ,useEffect, useState}from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { mixed } from \"yup\";\r\nimport \"./css/AdminPanel.css\"\r\n\r\nconst AdminPanel = () => {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState([]);\r\n    const [userId, setUserId] = useState(null);\r\n    const [teams, setTeams] = useState([]);\r\n    const [teamId, setTeamId] = useState(null);\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        fetch(`http://localhost:8080/api/users/`)\r\n        .then((res) => res.json())\r\n        .then((users)=>setUsers(users))\r\n        console.log(users);\r\n        \r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/api/teams/`)\r\n        .then((res) => res.json())\r\n        .then((teams)=>setTeams(teams))\r\n        \r\n    },[]);\r\n\r\n    const deleteUser = (id) => {\r\n        return axios.delete(`http://localhost:8080/api/users/${id}`)\r\n    .then(\r\n        alert(\"Deleting user completed\").catch(res =>{\r\n            console.error(res);\r\n            alert(\"Deleting user failed\");\r\n            history.push('/adminpanel');\r\n        }).catch(res =>{\r\n            console.error(res);\r\n            alert(\"Deleting user failed\");\r\n            history.push('/adminpanel');\r\n        })\r\n    );\r\n    }\r\n    \r\n\r\n    const deleteTeam = (id) => {\r\n        console.log(\"delete team \"+id);\r\n        return axios.delete(`http://localhost:8080/api/teams/${id}`)\r\n        .then(\r\n            alert(\"Deleting user completed\").catch(res =>{\r\n                console.error(res);\r\n                alert(\"Deleting user failed\");\r\n                history.push('/adminpanel');\r\n            })\r\n        .catch(res =>{\r\n            console.error(res);\r\n            alert(\"Deleting team failed\");\r\n            history.push('/');\r\n        })\r\n        );\r\n\r\n    }\r\n\r\n    function handleChange(e){\r\n        setUserId(e.target.value);\r\n    }\r\n\r\n    const handleSubmitUser = (e) => {\r\n        let id = userId;\r\n        deleteUser(id);\r\n        e.preventDefault();\r\n\r\n        \r\n    }\r\n\r\n    const handleSubmitTeam = (e) => {\r\n        deleteTeam(teamId);\r\n        e.preventDefault();\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"selects\">\r\n            <form className=\"adminForm\" onSubmit={handleSubmitUser}>\r\n                <select className=\"minimal\" id=\"1\" value={userId} onChange={handleChange}>\r\n                    {users.map((user) => {\r\n                        return(\r\n                            \r\n                            <option key={user.id} value={user.id}>{user.id} {user.username} {user.roles[0]?user.roles[0].name:\"\"} </option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                <div className=\"submitDiv\">\r\n                <p>Delete user by clicking a button below</p>\r\n                <input className=\"submitInput\" type=\"submit\" value=\"Delete\" />\r\n                </div>\r\n                </form>\r\n\r\n                <form className=\"adminForm\" onSubmit={handleSubmitTeam}>\r\n                <select className=\"minimal\" id=\"2\" value={teamId}>\r\n                    {teams.map((team) => {\r\n                        return(\r\n                            <option key={team.id} value={team.id}>{team.id} {team.name} from {team.city}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                <div className=\"submitDiv\">\r\n                <p>Delete team by clicking a button below</p>\r\n                <input className=\"submitInput\" type=\"submit\" value=\"Delete\" />\r\n                </div>\r\n                </form>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default AdminPanel;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Pagination.jsx",["154"],"import React from 'react';\r\nimport \"./css/Pagination.css\";\r\n\r\nconst Pagination = ({ competitionsPerPage, totalCompetitions, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalCompetitions / competitionsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n        \r\n      <ul className='pagination'>\r\n        \r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => {paginate(number)}}  className='page-link'>\r\n        {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","D:\\GitHub\\Proballbly\\frontend\\proballbly\\src\\components\\Footer.jsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":12},{"ruleId":"159","severity":1,"message":"163","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":11},{"ruleId":"159","severity":1,"message":"164","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":17},{"ruleId":"159","severity":1,"message":"165","line":8,"column":18,"nodeType":"161","messageId":"162","endLine":8,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":42,"column":33,"nodeType":"168","endLine":42,"endColumn":81},{"ruleId":"166","severity":1,"message":"167","line":43,"column":33,"nodeType":"168","endLine":43,"endColumn":81},{"ruleId":"166","severity":1,"message":"167","line":43,"column":33,"nodeType":"168","endLine":43,"endColumn":81},{"ruleId":"166","severity":1,"message":"167","line":43,"column":33,"nodeType":"168","endLine":43,"endColumn":81},{"ruleId":"159","severity":1,"message":"169","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":15},{"ruleId":"159","severity":1,"message":"170","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":23},{"ruleId":"159","severity":1,"message":"171","line":2,"column":46,"nodeType":"161","messageId":"162","endLine":2,"endColumn":50},{"ruleId":"159","severity":1,"message":"172","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"159","severity":1,"message":"173","line":11,"column":14,"nodeType":"161","messageId":"162","endLine":11,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":39,"column":71,"nodeType":"176","messageId":"177","endLine":39,"endColumn":73},{"ruleId":"159","severity":1,"message":"178","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":22,"column":7,"nodeType":"181","endLine":22,"endColumn":9,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"167","line":48,"column":33,"nodeType":"168","endLine":48,"endColumn":81},{"ruleId":"159","severity":1,"message":"183","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":20},{"ruleId":"159","severity":1,"message":"184","line":2,"column":22,"nodeType":"161","messageId":"162","endLine":2,"endColumn":31},{"ruleId":"159","severity":1,"message":"178","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"159","severity":1,"message":"185","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":16},{"ruleId":"159","severity":1,"message":"186","line":2,"column":16,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":47,"column":1,"nodeType":"189","endLine":53,"endColumn":3},{"ruleId":"159","severity":1,"message":"190","line":7,"column":11,"nodeType":"161","messageId":"162","endLine":7,"endColumn":22},{"ruleId":"159","severity":1,"message":"191","line":12,"column":11,"nodeType":"161","messageId":"162","endLine":12,"endColumn":19},{"ruleId":"159","severity":1,"message":"192","line":19,"column":12,"nodeType":"161","messageId":"162","endLine":19,"endColumn":22},{"ruleId":"159","severity":1,"message":"193","line":20,"column":12,"nodeType":"161","messageId":"162","endLine":20,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":119,"column":47,"nodeType":"168","endLine":119,"endColumn":74},{"ruleId":"194","severity":1,"message":"195","line":126,"column":43,"nodeType":"168","endLine":126,"endColumn":70},{"ruleId":"159","severity":1,"message":"196","line":2,"column":26,"nodeType":"161","messageId":"162","endLine":2,"endColumn":32},{"ruleId":"159","severity":1,"message":"197","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"198","line":9,"column":11,"nodeType":"161","messageId":"162","endLine":9,"endColumn":18},{"ruleId":"159","severity":1,"message":"199","line":10,"column":11,"nodeType":"161","messageId":"162","endLine":10,"endColumn":18},{"ruleId":"159","severity":1,"message":"200","line":13,"column":12,"nodeType":"161","messageId":"162","endLine":13,"endColumn":16},{"ruleId":"159","severity":1,"message":"201","line":13,"column":17,"nodeType":"161","messageId":"162","endLine":13,"endColumn":24},{"ruleId":"159","severity":1,"message":"202","line":14,"column":12,"nodeType":"161","messageId":"162","endLine":14,"endColumn":21},{"ruleId":"159","severity":1,"message":"203","line":14,"column":23,"nodeType":"161","messageId":"162","endLine":14,"endColumn":35},{"ruleId":"159","severity":1,"message":"204","line":15,"column":12,"nodeType":"161","messageId":"162","endLine":15,"endColumn":19},{"ruleId":"159","severity":1,"message":"205","line":15,"column":21,"nodeType":"161","messageId":"162","endLine":15,"endColumn":31},{"ruleId":"159","severity":1,"message":"206","line":16,"column":12,"nodeType":"161","messageId":"162","endLine":16,"endColumn":23},{"ruleId":"159","severity":1,"message":"207","line":16,"column":25,"nodeType":"161","messageId":"162","endLine":16,"endColumn":39},{"ruleId":"159","severity":1,"message":"208","line":17,"column":12,"nodeType":"161","messageId":"162","endLine":17,"endColumn":16},{"ruleId":"159","severity":1,"message":"209","line":17,"column":18,"nodeType":"161","messageId":"162","endLine":17,"endColumn":25},{"ruleId":"159","severity":1,"message":"210","line":18,"column":12,"nodeType":"161","messageId":"162","endLine":18,"endColumn":16},{"ruleId":"159","severity":1,"message":"211","line":18,"column":18,"nodeType":"161","messageId":"162","endLine":18,"endColumn":25},{"ruleId":"159","severity":1,"message":"212","line":19,"column":12,"nodeType":"161","messageId":"162","endLine":19,"endColumn":17},{"ruleId":"159","severity":1,"message":"213","line":19,"column":19,"nodeType":"161","messageId":"162","endLine":19,"endColumn":27},{"ruleId":"159","severity":1,"message":"192","line":20,"column":12,"nodeType":"161","messageId":"162","endLine":20,"endColumn":22},{"ruleId":"159","severity":1,"message":"214","line":20,"column":24,"nodeType":"161","messageId":"162","endLine":20,"endColumn":37},{"ruleId":"159","severity":1,"message":"193","line":21,"column":12,"nodeType":"161","messageId":"162","endLine":21,"endColumn":19},{"ruleId":"159","severity":1,"message":"215","line":21,"column":21,"nodeType":"161","messageId":"162","endLine":21,"endColumn":31},{"ruleId":"159","severity":1,"message":"216","line":31,"column":11,"nodeType":"161","messageId":"162","endLine":31,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":41,"column":46,"nodeType":"176","messageId":"177","endLine":41,"endColumn":48},{"ruleId":"166","severity":1,"message":"167","line":55,"column":41,"nodeType":"168","endLine":55,"endColumn":85},{"ruleId":"159","severity":1,"message":"196","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":32},{"ruleId":"159","severity":1,"message":"192","line":19,"column":12,"nodeType":"161","messageId":"162","endLine":19,"endColumn":22},{"ruleId":"159","severity":1,"message":"193","line":20,"column":12,"nodeType":"161","messageId":"162","endLine":20,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":121,"column":43,"nodeType":"168","endLine":121,"endColumn":70},{"ruleId":"159","severity":1,"message":"217","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":29},{"ruleId":"159","severity":1,"message":"218","line":1,"column":31,"nodeType":"161","messageId":"162","endLine":1,"endColumn":41},{"ruleId":"159","severity":1,"message":"219","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":15},{"ruleId":"159","severity":1,"message":"220","line":12,"column":20,"nodeType":"161","messageId":"162","endLine":12,"endColumn":29},{"ruleId":"179","severity":1,"message":"221","line":22,"column":7,"nodeType":"181","endLine":22,"endColumn":9,"suggestions":"222"},{"ruleId":"194","severity":1,"message":"195","line":18,"column":13,"nodeType":"168","endLine":18,"endColumn":74},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Hamburger' is defined but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Standings' is defined but never used.","'handleClick' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'useHistory' is defined but never used.","'useParams' is defined but never used.","'render' is defined but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'togglePanel' is assigned a value but never used.","'checkBtn' is assigned a value but never used.","'successful' is assigned a value but never used.","'message' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'shortName' is assigned a value but never used.","'setShortName' is assigned a value but never used.","'website' is assigned a value but never used.","'setWebsite' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'logo' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'arena' is assigned a value but never used.","'setArena' is assigned a value but never used.","'setSuccessful' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'toggleTeams' is assigned a value but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'mixed' is defined but never used.","'setTeamId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [id]",{"range":"231","text":"232"},"Update the dependencies array to be: [users]",{"range":"233","text":"234"},[612,614],"[id]",[673,675],"[users]"]