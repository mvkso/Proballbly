{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst authenticationHeader = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return {\n      Authorization: 'Bearer ' + user.accessToken\n    }; // for Spring Boot back-end\n  } else {\n    return {};\n  }\n};\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password\n  });\n};\n\nconst login = (username, password) => {\n  return axios.post(API_URL + \"signin\", {\n    username,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n  console.log(\"usuwam token\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n  authenticationHeader,\n  register,\n  login,\n  logout,\n  getCurrentUser\n};","map":{"version":3,"sources":["D:/GitHub/Proballbly/frontend/proballbly/src/scripts/authentication.js"],"names":["axios","API_URL","authenticationHeader","user","JSON","parse","localStorage","getItem","accessToken","Authorization","register","username","email","password","post","login","then","response","data","setItem","stringify","logout","removeItem","console","log","getCurrentUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AAEA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAjB,EAA8B;AAC5B,WAAO;AAAEC,MAAAA,aAAa,EAAE,YAAYN,IAAI,CAACK;AAAlC,KAAP,CAD4B,CAC4B;AACzD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACJ,CARD;;AAWA,MAAME,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+B;AAC9C,SAAOb,KAAK,CAACc,IAAN,CAAWb,OAAO,GAAG,QAArB,EAA+B;AACpCU,IAAAA,QADoC;AAEpCC,IAAAA,KAFoC;AAGpCC,IAAAA;AAHoC,GAA/B,CAAP;AAKD,CAND;;AAQA,MAAME,KAAK,GAAG,CAACJ,QAAD,EAAWE,QAAX,KAAwB;AACpC,SAAOb,KAAK,CACTc,IADI,CACCb,OAAO,GAAG,QADX,EACqB;AACxBU,IAAAA,QADwB;AAExBE,IAAAA;AAFwB,GADrB,EAKJG,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcV,WAAlB,EAA+B;AAC7BF,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeH,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AACD,WAAOD,QAAQ,CAACC,IAAhB;AACD,GAVI,CAAP;AAWD,CAZD;;AAcA,MAAMG,MAAM,GAAG,MAAM;AACnBf,EAAAA,YAAY,CAACgB,UAAb,CAAwB,MAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAOrB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAIA,eAAe;AACXL,EAAAA,oBADW;AAEbQ,EAAAA,QAFa;AAGbK,EAAAA,KAHa;AAIbM,EAAAA,MAJa;AAKbI,EAAAA;AALa,CAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst authenticationHeader = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    } else {\r\n      return {};\r\n    }\r\n}\r\n\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  console.log(\"usuwam token\")\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n    authenticationHeader,\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};"]},"metadata":{},"sourceType":"module"}