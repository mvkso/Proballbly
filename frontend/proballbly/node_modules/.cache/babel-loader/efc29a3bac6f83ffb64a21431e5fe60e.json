{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Proballbly\\\\frontend\\\\proballbly\\\\src\\\\components\\\\Select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Select.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = data => {\n  _s();\n\n  let competitions = data.data[0];\n  const [team1, setTeam1] = useState(1);\n  const [team2, setTeam2] = useState(2);\n  const [result, setResult] = useState(\"\");\n  useEffect(() => console.log(competitions));\n\n  function algorithm() {\n    let x = competitions.table[team1].team.name;\n    setResult(x + \" is gonna win\");\n  }\n\n  function handlechange1(e) {\n    setTeam1(e.target.value);\n    algorithm();\n  }\n\n  function handlechange2(e) {\n    setTeam2(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectors\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Calculate probability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selects\",\n      children: [data.data.map(standings => {\n        return standings.type === \"TOTAL\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"minimal\",\n          id: \"1\",\n          value: team1,\n          onChange: handlechange1,\n          children: standings.table.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: e.position,\n              children: [e.position, \". \", e.team.name]\n            }, e.position, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this) : null;\n      }), data.data.map(standings2 => {\n        return standings2.type === \"TOTAL\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"minimal\",\n          id: \"2\",\n          value: team2,\n          onChange: handlechange2,\n          children: standings2.table.map(e2 => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: e2.position,\n              children: [e2.position, \". \", e2.team.name]\n            }, e2.position, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"CO \", team1, \" SIEMA \", team2, \" \\\" \", result, \" \\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"uZr9kd0U+1l0Ip4PnVhia2mZb9g=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["D:/GitHub/Proballbly/frontend/proballbly/src/components/Select.jsx"],"names":["React","useState","useEffect","useHistory","useParams","NavLink","Select","data","competitions","team1","setTeam1","team2","setTeam2","result","setResult","console","log","algorithm","x","table","team","name","handlechange1","e","target","value","handlechange2","map","standings","type","position","standings2","e2"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Select.css\"\r\n\r\n\r\nconst Select = (data) => {\r\n\r\n    let competitions = data.data[0];\r\n    const [team1, setTeam1] = useState(1);\r\n    const [team2, setTeam2] = useState(2);\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    useEffect(() => console.log(competitions));\r\n\r\n    function algorithm(){\r\n         let x = competitions.table[team1].team.name;\r\n         setResult(x+\" is gonna win\")       \r\n    }\r\n\r\n    function handlechange1(e){\r\n        setTeam1(e.target.value);\r\n        algorithm();\r\n\r\n    }\r\n\r\n    function handlechange2(e){\r\n        setTeam2(e.target.value);\r\n\r\n    }\r\n\r\n    return(\r\n    <div className=\"selectors\">\r\n        <header>Calculate probability</header>\r\n        \r\n            <div className=\"selects\">\r\n            {data.data.map((standings) => {\r\n                return standings.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"1\" value={team1} onChange={handlechange1}>\r\n                    {standings.table.map((e) => {\r\n                        return(\r\n                            <option key={e.position} value={e.position}>{e.position}. {e.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n        \r\n        {data.data.map((standings2) => {\r\n                return standings2.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"2\" value={team2} onChange={handlechange2}>\r\n                    {standings2.table.map((e2) => {\r\n                        return(\r\n                            <option key={e2.position} value={e2.position}>{e2.position}. {e2.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n            </div>\r\n           \r\n            \r\n           \r\n            <div>CO {team1} SIEMA {team2} \" {result} \"</div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Select;"]},"metadata":{},"sourceType":"module"}