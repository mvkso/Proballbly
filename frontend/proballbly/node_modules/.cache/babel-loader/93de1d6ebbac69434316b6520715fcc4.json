{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Proballbly\\\\frontend\\\\proballbly\\\\src\\\\components\\\\AllTeams.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./css/AllTeams.css\";\nimport React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllTeams = () => {\n  _s();\n\n  const history = useHistory();\n  const API_URL = \"http://localhost:8080/api/teams/\";\n  const [teamsToggle, setTeamsToggle] = useState(true);\n  const [formToggle, setFormToggle] = useState(false);\n  const [teams, setTeams] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [shortName, setShortName] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [arena, setArena] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/teams/`).then(res => res.json()).then(teams => setTeams(teams));\n  }, []);\n\n  const toggleTeams = () => {\n    history.push(\"/allteams\");\n  };\n\n  const addTeams = () => {\n    return axios.post(API_URL, {\n      name,\n      shortName,\n      website,\n      description,\n      city,\n      logo,\n      arena\n    });\n  };\n\n  const handleAddTeam = () => {\n    addTeams.then(response => {\n      setMessage(response.data.message);\n      setSuccessful(true);\n      alert(\"Success!\");\n      history.push(\"/allteams\");\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      alert(\"Adding team error, let's go back to main page\");\n      history.push('/');\n      setMessage(resMessage);\n      setSuccessful(false);\n    });\n  };\n\n  const onChangeName = e => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const onChangeShortName = e => {\n    const shortName = e.target.value;\n    setShortName(shortName);\n  };\n\n  const onChangeWebsite = e => {\n    const website = e.target.value;\n    setWebsite(website);\n  };\n\n  const onChangeDescription = e => {\n    const description = e.target.value;\n    setDescription(description);\n  };\n\n  const onChangeCity = e => {\n    const city = e.target.value;\n    setCity(city);\n  };\n\n  const onChangeLogo = e => {\n    const logo = e.target.value;\n    setLogo(logo);\n  };\n\n  const onChangeArena = e => {\n    const arena = e.target.value;\n    setArena(arena);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: toggleTeams,\n    children: \"Check teams or add a new one!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllTeams, \"/mTtzTUBvYXGitR2DluePIGXQbY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AllTeams;\nexport default AllTeams;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTeams\");","map":{"version":3,"sources":["D:/GitHub/Proballbly/frontend/proballbly/src/components/AllTeams.jsx"],"names":["React","useState","useRef","useHistory","axios","AllTeams","history","API_URL","teamsToggle","setTeamsToggle","formToggle","setFormToggle","teams","setTeams","name","setName","shortName","setShortName","website","setWebsite","description","setDescription","city","setCity","logo","setLogo","arena","setArena","successful","setSuccessful","message","setMessage","useEffect","fetch","then","res","json","toggleTeams","push","addTeams","post","handleAddTeam","response","data","alert","window","location","reload","error","resMessage","toString","onChangeName","e","target","value","onChangeShortName","onChangeWebsite","onChangeDescription","onChangeCity","onChangeLogo","onChangeArena"],"mappings":"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","sourcesContent":["import \"./css/AllTeams.css\"\r\nimport React, {useState, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst AllTeams = () => {\r\n    const history = useHistory();\r\n    const API_URL = \"http://localhost:8080/api/teams/\";\r\n    const [teamsToggle, setTeamsToggle] = useState(true);\r\n    const [formToggle, setFormToggle] = useState(false);\r\n    const [teams, setTeams] = useState([]);\r\n    const [name,setName] = useState(\"\");\r\n    const [shortName, setShortName] = useState(\"\");\r\n    const [website, setWebsite] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [logo, setLogo] = useState(\"\");\r\n    const [arena, setArena] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n   \r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/api/teams/`)\r\n        .then((res) => res.json())\r\n        .then((teams)=>setTeams(teams))\r\n        \r\n    },[]);\r\n\r\n    const toggleTeams = () => {\r\n        history.push(\"/allteams\");\r\n      };\r\n\r\n\r\n    const addTeams = () =>{\r\n        return axios.post(API_URL, {\r\n            name,\r\n            shortName,\r\n            website,\r\n            description,\r\n            city,\r\n            logo,\r\n            arena,\r\n        });\r\n    };\r\n\r\n    const handleAddTeam = () => {\r\n        addTeams.then(\r\n            (response) => {\r\n              setMessage(response.data.message);\r\n              setSuccessful(true);\r\n              alert(\"Success!\");\r\n              history.push(\"/allteams\");\r\n              window.location.reload();\r\n            },\r\n            (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n                alert(\"Adding team error, let's go back to main page\");\r\n                history.push('/');\r\n              setMessage(resMessage);\r\n              setSuccessful(false);\r\n            }\r\n          );\r\n    };\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value;\r\n        setName(name);\r\n      };\r\n\r\n      const onChangeShortName = (e) => {\r\n        const shortName = e.target.value;\r\n        setShortName(shortName);\r\n      };\r\n\r\n      const onChangeWebsite = (e) => {\r\n        const website = e.target.value;\r\n        setWebsite(website);\r\n      };\r\n\r\n      const onChangeDescription = (e) => {\r\n        const description = e.target.value;\r\n        setDescription(description);\r\n      };\r\n\r\n      const onChangeCity = (e) => {\r\n        const city = e.target.value;\r\n        setCity(city);\r\n      };\r\n\r\n      const onChangeLogo= (e) => {\r\n        const logo = e.target.value;\r\n        setLogo(logo);\r\n      };\r\n\r\n      const onChangeArena = (e) => {\r\n        const arena = e.target.value;\r\n        setArena(arena);\r\n      };\r\n\r\n      return(\r\n        <button type=\"button\" onClick={toggleTeams}>Check teams or add a new one!</button>\r\n      );\r\n\r\n\r\n}\r\nexport default AllTeams;\r\n"]},"metadata":{},"sourceType":"module"}