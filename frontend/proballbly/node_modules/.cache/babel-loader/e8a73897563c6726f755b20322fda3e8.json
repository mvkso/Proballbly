{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Proballbly\\\\frontend\\\\proballbly\\\\src\\\\components\\\\Select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./css/Select.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = data => {\n  _s();\n\n  let competitions = data.data[0];\n  const [team1, setTeam1] = useState(1);\n  const [team2, setTeam2] = useState(1);\n  const [result, setResult] = useState(team1 + \" \" + team2);\n  useEffect(() => console.log(competitions));\n\n  function algorithm() {\n    let team1points = parseInt(competitions.table[team1 - 1].points);\n    let team1position = parseInt(competitions.table[team1 - 1].position);\n    let team2points = parseInt(competitions.table[team2 - 1].points);\n    let team2position = parseInt(competitions.table[team2 - 1].position);\n    let team1result = team1points / team1position;\n    let team2result = team2points / team2position;\n    let allpoints = team1result + team2result;\n\n    if (team1result > team2result) {\n      setResult(competitions.table[team1x - 1].team.name + \" is going to win in \" + team1result / allpoints * 100 + \"%\");\n    } else if (team1result < team2result) {\n      setResult(competitions.table[team2y - 1].team.name + \" is going to win in \" + team2result / allpoints * 100 + \"%\");\n    } else {\n      setResult(\"There will be draw no cap\");\n    }\n  }\n\n  function handlechange1(e) {\n    setTeam1(e.target.value);\n    setTeam1(e.target.value);\n\n    if (team1 !== team2) {\n      algorithm(team1, team2);\n    }\n  }\n\n  function handlechange2(event) {\n    setTeam2(event.target.value);\n    setTeam2(event.target.value);\n\n    if (team1 !== team2) {\n      algorithm(team1, team2);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectors\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Calculate probability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: algorithm(team1, team2),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selects\",\n        children: [data.data.map(standings => {\n          return standings.type === \"TOTAL\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"minimal\",\n            id: \"1\",\n            value: team1,\n            onChange: handlechange1,\n            children: standings.table.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e.position,\n                children: [e.position, \". \", e.team.name]\n              }, e.position, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this) : null;\n        }), data.data.map(standings2 => {\n          return standings2.type === \"TOTAL\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"minimal\",\n            id: \"2\",\n            value: team2,\n            onChange: handlechange2,\n            children: standings2.table.map(e2 => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e2.position,\n                children: [e2.position, \". \", e2.team.name]\n              }, e2.position, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"Kf4ksm69qC9EqC0ACC6Vr+0JtEE=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["D:/GitHub/Proballbly/frontend/proballbly/src/components/Select.jsx"],"names":["React","useState","useEffect","useHistory","useParams","NavLink","Select","data","competitions","team1","setTeam1","team2","setTeam2","result","setResult","console","log","algorithm","team1points","parseInt","table","points","team1position","position","team2points","team2position","team1result","team2result","allpoints","team1x","team","name","team2y","handlechange1","e","target","value","handlechange2","event","map","standings","type","standings2","e2"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./css/Select.css\"\r\n\r\n\r\nconst Select = (data) => {\r\n\r\n    let competitions = data.data[0];\r\n    const [team1, setTeam1] = useState(1);\r\n    const [team2, setTeam2] = useState(1);\r\n    const [result, setResult] = useState(team1 + \" \" + team2);\r\n\r\n    useEffect(() => console.log(competitions));\r\n\r\n    function algorithm(){\r\n        let team1points =  parseInt(competitions.table[team1-1].points);\r\n        let team1position = parseInt(competitions.table[team1-1].position);\r\n        let team2points =  parseInt(competitions.table[team2-1].points);\r\n        let team2position = parseInt(competitions.table[team2-1].position);\r\n        let team1result = team1points/team1position;\r\n        let team2result = team2points/team2position;\r\n        let allpoints = team1result+team2result;\r\n        if(team1result>team2result){\r\n            setResult(competitions.table[team1x-1].team.name+\" is going to win in \"+ team1result/allpoints*100+ \"%\");\r\n        }else if(team1result<team2result){\r\n            setResult(competitions.table[team2y-1].team.name+\" is going to win in \"+ team2result/allpoints*100+ \"%\");\r\n        }else{\r\n            setResult(\"There will be draw no cap\");\r\n        }\r\n        \r\n             \r\n    }\r\n\r\n    function handlechange1(e){\r\n        setTeam1(e.target.value);\r\n        setTeam1(e.target.value);\r\n        if(team1 !== team2){\r\n            algorithm(team1,team2);\r\n            }\r\n\r\n    }\r\n\r\n    function handlechange2(event){\r\n        setTeam2(event.target.value);\r\n        setTeam2(event.target.value);\r\n        if(team1 !== team2){\r\n            algorithm(team1,team2);\r\n            }\r\n\r\n    }\r\n\r\n    return(\r\n    <div className=\"selectors\">\r\n        <header>Calculate probability</header>\r\n        <form onSubmit={algorithm(team1, team2)}>\r\n            <div className=\"selects\">\r\n            {data.data.map((standings) => {\r\n                return standings.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"1\" value={team1} onChange={handlechange1}>\r\n                    {standings.table.map((e) => {\r\n                        return(\r\n                            <option key={e.position} value={e.position}>{e.position}. {e.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n        \r\n        {data.data.map((standings2) => {\r\n                return standings2.type === \"TOTAL\"?\r\n                <select className=\"minimal\" id=\"2\" value={team2} onChange={handlechange2}>\r\n                    {standings2.table.map((e2) => {\r\n                        return(\r\n                            <option key={e2.position} value={e2.position}>{e2.position}. {e2.team.name}</option> \r\n                        );\r\n                    })}\r\n                \r\n                </select>\r\n                :null;\r\n            })}\r\n            \r\n            </div>\r\n           \r\n            \r\n            </form>\r\n            <div className=\"algorithm\">{result}</div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Select;"]},"metadata":{},"sourceType":"module"}